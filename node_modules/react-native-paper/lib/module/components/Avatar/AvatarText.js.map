{"version":3,"sources":["AvatarText.tsx"],"names":["defaultSize","AvatarText","props","label","size","style","theme","labelStyle","color","rest","StyleSheet","flatten","backgroundColor","colors","primary","restStyle","textColor","isLight","white","width","height","borderRadius","styles","container","text","fontSize","lineHeight","React","Component","create","justifyContent","alignItems","textAlign","textAlignVertical"],"mappings":"g/BAAA,oDACA,yCAOA,oDACA,gEACA,2CACA,2C,8FAGA,GAAMA,CAAAA,WAAW,CAAG,EAApB,C,GAgDMC,CAAAA,U,mVAOK,iBASH,KAAKC,KATF,CAELC,KAFK,aAELA,KAFK,8BAGLC,IAHK,CAGLA,IAHK,2BAGEJ,WAHF,kBAILK,KAJK,aAILA,KAJK,CAKLC,KALK,aAKLA,KALK,CAMLC,UANK,aAMLA,UANK,CAOLC,KAPK,aAOLA,KAPK,CAQFC,IARE,mHAYLC,wBAAWC,OAAX,CAAmBN,KAAnB,GAA6B,EAZxB,2BAWCO,eAXD,CAWCA,eAXD,+BAWmBN,KAAK,CAACO,MAAN,CAAaC,OAXhC,sBAW4CC,SAX5C,iEAaP,GAAMC,CAAAA,SAAS,CACbR,KAAK,GACJ,mBAAMI,eAAN,EAAuBK,OAAvB,GAAmC,oBAAnC,CAA0DC,aADtD,CADP,CAIA,MACE,qBAAC,iBAAD,wBACE,KAAK,CAAE,CACL,CACEC,KAAK,CAAEf,IADT,CAEEgB,MAAM,CAAEhB,IAFV,CAGEiB,YAAY,CAAEjB,IAAI,CAAG,CAHvB,CAIEQ,eAAe,CAAfA,eAJF,CADK,CAOLU,MAAM,CAACC,SAPF,CAQLR,SARK,CADT,EAWMN,IAXN,mDAaE,oBAAC,aAAD,EACE,KAAK,CAAE,CACLa,MAAM,CAACE,IADF,CAEL,CACEhB,KAAK,CAAEQ,SADT,CAEES,QAAQ,CAAErB,IAAI,CAAG,CAFnB,CAGEsB,UAAU,CAAEtB,IAHd,CAFK,CAOLG,UAPK,CADT,CAUE,aAAa,CAAE,CAVjB,kDAYGJ,KAZH,CAbF,CADF,CA8BD,C,wBAtDsBwB,KAAK,CAACC,S,+BAAzB3B,U,eACiB,a,+BADjBA,U,gBAGkB,CACpBG,IAAI,CAAEJ,WADc,C,EAsDxB,GAAMsB,CAAAA,MAAM,CAAGZ,wBAAWmB,MAAX,CAAkB,CAC/BN,SAAS,CAAE,CACTO,cAAc,CAAE,QADP,CAETC,UAAU,CAAE,QAFH,CADoB,CAK/BP,IAAI,CAAE,CACJQ,SAAS,CAAE,QADP,CAEJC,iBAAiB,CAAE,QAFf,CALyB,CAAlB,CAAf,C,aAWe,uBAAUhC,UAAV,C","sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport Color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\nimport { Theme } from '../../types';\n\nconst defaultSize = 64;\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Initials to show as the text in the `Avatar`.\n   */\n  label: string;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Style for text container\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the title.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Text size={24} label=\"XD\" />\n * );\n * ```\n */\nclass AvatarText extends React.Component<Props> {\n  static displayName = 'Avatar.Text';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const {\n      label,\n      size = defaultSize,\n      style,\n      theme,\n      labelStyle,\n      color,\n      ...rest\n    } = this.props;\n\n    const { backgroundColor = theme.colors.primary, ...restStyle } =\n      StyleSheet.flatten(style) || {};\n    const textColor =\n      color ||\n      (Color(backgroundColor).isLight() ? 'rgba(0, 0, 0, .54)' : white);\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          styles.container,\n          restStyle,\n        ]}\n        {...rest}\n      >\n        <Text\n          style={[\n            styles.text,\n            {\n              color: textColor,\n              fontSize: size / 2,\n              lineHeight: size,\n            },\n            labelStyle,\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n  },\n});\n\nexport default withTheme(AvatarText);\n"]}