{"version":3,"sources":["FABGroup.tsx"],"names":["FABGroup","backdrop","Animated","Value","animations","props","onStateChange","open","prevProps","scale","theme","animation","parallel","timing","state","toValue","duration","useNativeDriver","stagger","map","reverse","start","actions","icon","onPress","accessibilityLabel","style","fabStyle","visible","testID","colors","labelColor","dark","text","fade","rgb","string","backdropOpacity","interpolate","inputRange","outputRange","opacities","scales","opacity","styles","container","close","backgroundColor","safeArea","it","i","item","label","transform","color","surface","toggle","fab","nextProps","prevState","_","React","Component","StyleSheet","create","alignItems","absoluteFillObject","justifyContent","marginHorizontal","marginBottom","marginTop","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\ntype State = {\n  backdrop: Animated.Value;\n  animations: Animated.Value[];\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     open: false,\n *   };\n *\n *   _onStateChange = ({ open }) => this.setState({ open });\n *\n *   render() {\n *     const { open } = this.state;\n *\n *     return (\n *       <Provider>\n *          <Portal>\n *            <FAB.Group\n *              open={open}\n *              icon={open ? 'calendar-today' : 'plus'}\n *              actions={[\n *                { icon: 'plus', onPress: () => console.log('Pressed add') },\n *                { icon: 'star', label: 'Star', onPress: () => console.log('Pressed star')},\n *                { icon: 'email', label: 'Email', onPress: () => console.log('Pressed email') },\n *                { icon: 'bell', label: 'Remind', onPress: () => console.log('Pressed notifications') },\n *              ]}\n *              onStateChange={this._onStateChange}\n *              onPress={() => {\n *                if (open) {\n *                  // do something if the speed dial is open\n *                }\n *              }}\n *            />\n *          </Portal>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass FABGroup extends React.Component<Props, State> {\n  static displayName = 'FAB.Group';\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      animations: nextProps.actions.map(\n        (_, i) =>\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\n      ),\n    };\n  }\n\n  state: State = {\n    backdrop: new Animated.Value(0),\n    animations: [],\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.open === prevProps.open) {\n      return;\n    }\n\n    const { scale } = this.props.theme.animation;\n    if (this.props.open) {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          this.state.animations\n            .map(animation =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...this.state.animations.map(animation =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }\n\n  private close = () => this.props.onStateChange({ open: false });\n\n  private toggle = () => this.props.onStateChange({ open: !this.props.open });\n\n  render() {\n    const {\n      actions,\n      icon,\n      open,\n      onPress,\n      accessibilityLabel,\n      theme,\n      style,\n      fabStyle,\n      visible,\n      testID,\n    } = this.props;\n    const { colors } = theme;\n\n    const labelColor = theme.dark\n      ? colors.text\n      : color(colors.text)\n          .fade(0.54)\n          .rgb()\n          .string();\n    const backdropOpacity = open\n      ? this.state.backdrop.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 1],\n        })\n      : this.state.backdrop;\n\n    const opacities = this.state.animations;\n    const scales = opacities.map(opacity =>\n      open\n        ? opacity.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.8, 1],\n          })\n        : 1\n    );\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n        <TouchableWithoutFeedback onPress={this.close}>\n          <Animated.View\n            pointerEvents={open ? 'auto' : 'none'}\n            style={[\n              styles.backdrop,\n              {\n                opacity: backdropOpacity,\n                backgroundColor: colors.backdrop,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n          <View pointerEvents={open ? 'box-none' : 'none'}>\n            {actions.map((it, i) => (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={styles.item}\n                pointerEvents={open ? 'box-none' : 'none'}\n              >\n                {it.label && (\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      this.close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                )}\n                <FAB\n                  small\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: theme.colors.surface,\n                      },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    this.close();\n                  }}\n                  accessibilityLabel={\n                    typeof it.accessibilityLabel !== 'undefined'\n                      ? it.accessibilityLabel\n                      : it.label\n                  }\n                  accessibilityTraits=\"button\"\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                  testID={it.testID}\n                  visible={open}\n                />\n              </View>\n            ))}\n          </View>\n          <FAB\n            onPress={() => {\n              onPress?.();\n              this.toggle();\n            }}\n            icon={icon}\n            color={this.props.color}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            style={[styles.fab, fabStyle]}\n            visible={visible}\n            testID={testID}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]}