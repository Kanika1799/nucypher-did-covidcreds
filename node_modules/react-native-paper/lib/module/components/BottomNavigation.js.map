{"version":3,"sources":["BottomNavigation.tsx"],"names":["MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Touchable","_0","route","style","children","borderless","centered","rippleColor","rest","TouchableRipple","supported","SceneComponent","props","component","React","createElement","PureComponent","BottomNavigation","scenes","jumpTo","key","nextProps","prevState","navigationState","index","routes","tabs","map","_","i","Animated","Value","offsets","nextState","current","previous","loaded","includes","scale","theme","animation","setState","keyboard","timing","state","visible","toValue","duration","useNativeDriver","start","shifting","isShifting","ripple","setValue","parallel","finished","tab","forEach","offset","e","layout","nativeEvent","height","width","measured","onTabPress","onIndexChange","event","defaultPrevented","preventDefault","findIndex","length","touch","animateToCurrentIndex","Platform","OS","Keyboard","addListener","handleKeyboardShow","handleKeyboardHide","prevProps","removeListener","renderScene","renderIcon","renderLabel","renderTouchable","getLabelText","title","getBadge","badge","getColor","color","getAccessibilityLabel","accessibilityLabel","getTestID","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","sceneAnimationEnabled","colors","isDarkTheme","dark","mode","StyleSheet","flatten","customBackground","backgroundColor","elevation","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","white","black","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","maxTabBarWidth","tabBarWidth","Math","min","tabWidth","rippleSize","styles","container","content","background","focused","opacity","top","absoluteFill","bar","transform","translateY","position","handleLayout","barContent","bottom","items","maxWidth","left","borderRadius","active","activeOpacity","inactiveOpacity","onPress","handleTabPress","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","item","iconContainer","iconWrapper","icon","badgeContainer","right","String","labelContainer","labelWrapper","label","Component","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","marginHorizontal","alignSelf","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\n\nimport * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  Keyboard,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport color from 'color';\nimport overlay from '../styles/overlay';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Badge from './Badge';\nimport TouchableRipple from './TouchableRipple';\nimport Text from './Typography/Text';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype TabPressEvent = {\n  defaultPrevented: boolean;\n  preventDefault(): void;\n};\n\ntype TouchableProps = TouchableWithoutFeedbackProps & {\n  key: string;\n  route: Route;\n  children: React.ReactNode;\n  borderless?: boolean;\n  centered?: boolean;\n  rippleColor?: string;\n};\n\ntype Props = {\n  /**\n   * Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label.\n   * By default, this is `true` when you have more than 3 tabs.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number reprsenting the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to be used as the touchable for the tab item.\n   * Renders a `TouchableRipple` on Android and `TouchableWithoutFeedback` with `View` on iOS.\n   */\n  renderTouchable?: (props: TouchableProps) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route } & TabPressEvent) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether animation is enabled for scenes transitions in `shifting` mode.\n   * By default, the scenes cross-fade during tab change when `shifting` is enabled.\n   * Specify `sceneAnimationEnabled` as `false` to disable the animation.\n   */\n  sceneAnimationEnabled?: boolean;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Style for the bottom navigation bar.\n   * You can set a bottom padding here if you have a translucent navigation bar on Android:\n   *\n   * ```js\n   * barStyle={{ paddingBottom: 48 }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  visible: Animated.Value;\n  /**\n   * Active state of individual tab items, active state is 1 and inactve state is 0.\n   */\n  tabs: Animated.Value[];\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecesary re-renders.\n   */\n  offsets: Animated.Value[];\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * Use don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  index: Animated.Value;\n  /**\n   * Animation for the touch, used to determine it's scale and opacity.\n   */\n  touch: Animated.Value;\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  ripple: Animated.Value;\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  layout: { height: number; width: number; measured: boolean };\n  /**\n   * Currently active index. Used only for getDerivedStateFromProps.\n   */\n  current: number;\n  /**\n   * Previously active index. Used to determine the position of the ripple.\n   */\n  previous: number;\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  loaded: number[];\n  /**\n   * Trak whether the keyboard is visible to show and hide the navigation bar.\n   */\n  keyboard: boolean;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = 9999;\n\nconst Touchable = ({\n  route: _0,\n  style,\n  children,\n  borderless,\n  centered,\n  rippleColor,\n  ...rest\n}: TouchableProps) =>\n  TouchableRipple.supported ? (\n    <TouchableRipple\n      {...rest}\n      borderless={borderless}\n      centered={centered}\n      rippleColor={rippleColor}\n      style={style}\n    >\n      {children}\n    </TouchableRipple>\n  ) : (\n    <TouchableWithoutFeedback {...rest}>\n      <View style={style}>{children}</View>\n    </TouchableWithoutFeedback>\n  );\n\nclass SceneComponent extends React.PureComponent<any> {\n  render() {\n    const { component, ...rest } = this.props;\n    return React.createElement(component, rest);\n  }\n}\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tab-navigator](https://github.com/react-navigation/react-navigation-material-bottom-tab-navigator).\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     index: 0,\n *     routes: [\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\n *       { key: 'albums', title: 'Albums', icon: 'album' },\n *       { key: 'recents', title: 'Recents', icon: 'history' },\n *     ],\n *   };\n *\n *   _handleIndexChange = index => this.setState({ index });\n *\n *   _renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   render() {\n *     return (\n *       <BottomNavigation\n *         navigationState={this.state}\n *         onIndexChange={this._handleIndexChange}\n *         renderScene={this._renderScene}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass BottomNavigation extends React.Component<Props, State> {\n  /**\n   * Function which takes a map of route keys to components.\n   * Pure components are used to minmize re-rendering of the pages.\n   * This drastically improves the animation performance.\n   */\n  static SceneMap(scenes: {\n    [key: string]: React.ComponentType<{\n      route: Route;\n      jumpTo: (key: string) => void;\n    }>;\n  }) {\n    return ({\n      route,\n      jumpTo,\n    }: {\n      route: Route;\n      jumpTo: (key: string) => void;\n    }) => (\n      <SceneComponent\n        key={route.key}\n        component={scenes[route.key ? route.key : '']}\n        route={route}\n        jumpTo={jumpTo}\n      />\n    );\n  }\n\n  static defaultProps = {\n    labeled: true,\n    keyboardHidesNavigationBar: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: State) {\n    const { index, routes } = nextProps.navigationState;\n\n    // Re-create animated values if routes have been added/removed\n    // Preserve previous animated values if they exist, so we don't break animations\n    const tabs = routes.map(\n      // focused === 1, unfocused === 0\n      (_: any, i: number) =>\n        prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0)\n    );\n    const offsets = routes.map(\n      // offscreen === 1, normal === 0\n      (_: any, i: number) =>\n        prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1)\n    );\n\n    const nextState = {\n      tabs,\n      offsets,\n    };\n\n    if (index !== prevState.current) {\n      /* $FlowFixMe */\n      Object.assign(nextState, {\n        // Store the current index in state so that we can later check if the index has changed\n        current: index,\n        previous: prevState.current,\n        // Set the current tab to be loaded if it was not loaded before\n        loaded: prevState.loaded.includes(index)\n          ? prevState.loaded\n          : [...prevState.loaded, index],\n      });\n    }\n\n    return nextState;\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { index } = this.props.navigationState;\n\n    this.state = {\n      visible: new Animated.Value(1),\n      tabs: [],\n      offsets: [],\n      index: new Animated.Value(index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: { height: 0, width: 0, measured: false },\n      current: index,\n      previous: 0,\n      loaded: [index],\n      keyboard: false,\n    };\n  }\n\n  componentDidMount() {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    this.animateToCurrentIndex();\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.navigationState.index === this.props.navigationState.index) {\n      return;\n    }\n\n    // Reset offsets of previous and current tabs before animation\n    this.state.offsets.forEach((offset, i) => {\n      if (\n        i === this.props.navigationState.index ||\n        i === prevProps.navigationState.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    this.animateToCurrentIndex();\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this.handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this.handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this.handleKeyboardHide);\n    }\n  }\n\n  private handleKeyboardShow = () => {\n    const { scale } = this.props.theme.animation;\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start()\n    );\n  };\n\n  private handleKeyboardHide = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n  };\n\n  private animateToCurrentIndex = () => {\n    const shifting = this.isShifting();\n    const {\n      navigationState,\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n    const { routes, index } = navigationState;\n\n    // Reset the ripple to avoid glitch if it's currently animating\n    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n    Animated.parallel([\n      Animated.timing(this.state.ripple, {\n        toValue: 1,\n        duration: shifting ? 400 * scale : 0,\n        useNativeDriver: true,\n      }),\n      ...routes.map((_, i) =>\n        Animated.timing(this.state.tabs[i], {\n          toValue: i === index ? 1 : 0,\n          duration: shifting ? 150 * scale : 0,\n          useNativeDriver: true,\n        })\n      ),\n    ]).start(({ finished }) => {\n      // Workaround a bug in native animations where this is reset after first animation\n      this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n      // Update the index to change bar's bacground color and then hide the ripple\n      this.state.index.setValue(index);\n      this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        // Position all inactive screens offscreen to save memory usage\n        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n        this.state.offsets.forEach((offset, i) => {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n        measured: true,\n      },\n    });\n  };\n\n  private handleTabPress = (index: number) => {\n    const { navigationState, onTabPress, onIndexChange } = this.props;\n\n    const event = {\n      route: navigationState.routes[index],\n      defaultPrevented: false,\n      preventDefault: () => {\n        event.defaultPrevented = true;\n      },\n    };\n\n    onTabPress?.(event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  private jumpTo = (key: string) => {\n    const index = this.props.navigationState.routes.findIndex(\n      route => route.key === key\n    );\n\n    this.props.onIndexChange(index);\n  };\n\n  private isShifting = () =>\n    typeof this.props.shifting === 'boolean'\n      ? this.props.shifting\n      : this.props.navigationState.routes.length > 3;\n\n  render() {\n    const {\n      navigationState,\n      renderScene,\n      renderIcon,\n      renderLabel,\n      renderTouchable = (props: TouchableProps) => <Touchable {...props} />,\n      getLabelText = ({ route }: { route: Route }) => route.title,\n      getBadge = ({ route }: { route: Route }) => route.badge,\n      getColor = ({ route }: { route: Route }) => route.color,\n      getAccessibilityLabel = ({ route }: { route: Route }) =>\n        route.accessibilityLabel,\n      getTestID = ({ route }: { route: Route }) => route.testID,\n      activeColor,\n      inactiveColor,\n      keyboardHidesNavigationBar,\n      barStyle,\n      labeled,\n      style,\n      theme,\n      sceneAnimationEnabled,\n    } = this.props;\n\n    const {\n      layout,\n      loaded,\n      index,\n      visible,\n      ripple,\n      keyboard,\n      tabs,\n      offsets,\n    } = this.state;\n    const { routes } = navigationState;\n    const { colors, dark: isDarkTheme, mode } = theme;\n\n    const shifting = this.isShifting();\n\n    const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n      StyleSheet.flatten(barStyle) || {};\n\n    const approxBackgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n\n    const backgroundColor = shifting\n      ? index.interpolate({\n          inputRange: routes.map((_, i) => i),\n          //@ts-ignore\n          outputRange: routes.map(\n            route => getColor({ route }) || approxBackgroundColor\n          ),\n        })\n      : approxBackgroundColor;\n\n    const isDark = !color(approxBackgroundColor).isLight();\n\n    const textColor = isDark ? white : black;\n    const activeTintColor =\n      typeof activeColor !== 'undefined' ? activeColor : textColor;\n    const inactiveTintColor =\n      typeof inactiveColor !== 'undefined'\n        ? inactiveColor\n        : color(textColor)\n            .alpha(0.5)\n            .rgb()\n            .string();\n\n    const touchColor = color(activeColor || activeTintColor)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n    const maxTabBarWidth = maxTabWidth * routes.length;\n\n    const tabBarWidth = Math.min(layout.width, maxTabBarWidth);\n    const tabWidth = tabBarWidth / routes.length;\n\n    const rippleSize = layout.width / 4;\n\n    return (\n      <View style={[styles.container, style]}>\n        <View style={[styles.content, { backgroundColor: colors.background }]}>\n          {routes.map((route, index) => {\n            if (!loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n            const focused = navigationState.index === index;\n\n            const opacity =\n              sceneAnimationEnabled !== false ? tabs[index] : focused ? 1 : 0;\n\n            const top = offsets[index].interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, FAR_FAR_AWAY],\n            });\n\n            return (\n              <Animated.View\n                key={route.key}\n                pointerEvents={focused ? 'auto' : 'none'}\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={[StyleSheet.absoluteFill, { opacity }]}\n                collapsable={false}\n                removeClippedSubviews={\n                  // On iOS, set removeClippedSubviews to true only when not focused\n                  // This is an workaround for a bug where the clipped view never re-appears\n                  Platform.OS === 'ios' ? navigationState.index !== index : true\n                }\n              >\n                <Animated.View style={[styles.content, { top }]}>\n                  {renderScene({\n                    route,\n                    jumpTo: this.jumpTo,\n                  })}\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </View>\n        <Surface\n          style={\n            [\n              styles.bar,\n              keyboardHidesNavigationBar\n                ? {\n                    // When the keyboard is shown, slide down the navigation bar\n                    transform: [\n                      {\n                        translateY: visible.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [layout.height, 0],\n                        }),\n                      },\n                    ],\n                    // Absolutely position the navigation bar so that the content is below it\n                    // This is needed to avoid gap at bottom when the navigation bar is hidden\n                    position: keyboard ? 'absolute' : null,\n                  }\n                : null,\n              barStyle,\n            ] as StyleProp<ViewStyle>\n          }\n          pointerEvents={\n            layout.measured\n              ? keyboardHidesNavigationBar && keyboard\n                ? 'none'\n                : 'auto'\n              : 'none'\n          }\n          onLayout={this.handleLayout}\n        >\n          <Animated.View style={[styles.barContent, { backgroundColor }]}>\n            <SafeAreaView\n              forceInset={{ top: 'never', bottom: 'always' }}\n              style={[styles.items, { maxWidth: maxTabBarWidth }]}\n            >\n              {shifting ? (\n                <Animated.View\n                  pointerEvents=\"none\"\n                  style={[\n                    styles.ripple,\n                    {\n                      // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                      // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                      top: (BAR_HEIGHT - rippleSize) / 2,\n                      left:\n                        tabWidth * (navigationState.index + 0.5) -\n                        rippleSize / 2,\n                      height: rippleSize,\n                      width: rippleSize,\n                      borderRadius: rippleSize / 2,\n                      backgroundColor: getColor({\n                        route: routes[navigationState.index],\n                      }),\n                      transform: [\n                        {\n                          // Scale to twice the size  to ensure it covers the whole navigation bar\n                          scale: ripple.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [0, 8],\n                          }),\n                        },\n                      ],\n                      opacity: ripple.interpolate({\n                        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                        outputRange: [0, 0, 1, 1],\n                      }),\n                    },\n                  ]}\n                />\n              ) : null}\n              {routes.map((route, index) => {\n                const focused = navigationState.index === index;\n                const active = tabs[index];\n\n                // Scale the label up\n                const scale =\n                  labeled && shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.5, 1],\n                      })\n                    : 1;\n\n                // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n                const translateY = labeled\n                  ? shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [7, 0],\n                      })\n                    : 0\n                  : 7;\n\n                // We render the active icon and label on top of inactive ones and cross-fade them on change.\n                // This trick gives the illusion that we are animating between active and inactive colors.\n                // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n                const activeOpacity = active;\n                const inactiveOpacity = active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                });\n\n                const badge = getBadge({ route });\n\n                return renderTouchable({\n                  key: route.key,\n                  route,\n                  borderless: true,\n                  centered: true,\n                  rippleColor: touchColor,\n                  onPress: () => this.handleTabPress(index),\n                  testID: getTestID({ route }),\n                  accessibilityLabel: getAccessibilityLabel({ route }),\n                  accessibilityTraits: focused\n                    ? ['button', 'selected']\n                    : 'button',\n                  accessibilityComponentType: 'button',\n                  accessibilityRole: 'button',\n                  accessibilityStates: ['selected'],\n                  style: styles.item,\n                  children: (\n                    <View pointerEvents=\"none\">\n                      <Animated.View\n                        style={[\n                          styles.iconContainer,\n                          { transform: [{ translateY }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={activeTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: inactiveOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: false,\n                              color: inactiveTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={inactiveTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <View\n                          style={[\n                            styles.badgeContainer,\n                            {\n                              right:\n                                (badge != null && typeof badge !== 'boolean'\n                                  ? String(badge).length * -2\n                                  : 0) - 2,\n                            },\n                          ]}\n                        >\n                          {typeof badge === 'boolean' ? (\n                            <Badge visible={badge} size={8} />\n                          ) : (\n                            <Badge visible={badge != null} size={16}>\n                              {badge}\n                            </Badge>\n                          )}\n                        </View>\n                      </Animated.View>\n                      {labeled ? (\n                        <Animated.View\n                          style={[\n                            styles.labelContainer,\n                            { transform: [{ scale }] },\n                          ]}\n                        >\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: activeOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: true,\n                                color: activeTintColor,\n                              })\n                            ) : (\n                              <Text\n                                style={[\n                                  styles.label,\n                                  { color: activeTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                          {shifting ? null : (\n                            <Animated.View\n                              style={[\n                                styles.labelWrapper,\n                                { opacity: inactiveOpacity },\n                              ]}\n                            >\n                              {renderLabel ? (\n                                renderLabel({\n                                  route,\n                                  focused: false,\n                                  color: inactiveTintColor,\n                                })\n                              ) : (\n                                <Text\n                                  style={[\n                                    styles.label,\n                                    { color: inactiveTintColor },\n                                  ]}\n                                >\n                                  {getLabelText({ route })}\n                                </Text>\n                              )}\n                            </Animated.View>\n                          )}\n                        </Animated.View>\n                      ) : (\n                        <View style={styles.labelContainer} />\n                      )}\n                    </View>\n                  ),\n                });\n              })}\n            </SafeAreaView>\n          </Animated.View>\n        </Surface>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"]}