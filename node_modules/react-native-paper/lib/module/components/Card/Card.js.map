{"version":3,"sources":["Card.tsx"],"names":["Card","elevation","Animated","Value","props","scale","theme","animation","timing","state","toValue","duration","useNativeDriver","start","children","cardElevation","onLongPress","onPress","style","testID","accessible","rest","roundness","total","React","Children","count","siblings","map","child","isValidElement","type","displayName","borderRadius","handlePressIn","undefined","handlePressOut","styles","innerContainer","index","cloneElement","Component","CardContent","CardActions","CardCover","CardTitle","StyleSheet","create","flexGrow","flexShrink"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\ntype State = {\n  elevation: Animated.Value;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const LeftContent = props => <Avatar.Icon {...props} icon=\"folder\" />\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={LeftContent} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Card extends React.Component<Props, State> {\n  // @component ./CardContent.tsx\n  static Content = CardContent;\n  // @component ./CardActions.tsx\n  static Actions = CardActions;\n  // @component ./CardCover.tsx\n  static Cover = CardCover;\n  // @component ./CardTitle.tsx\n  static Title = CardTitle;\n\n  static defaultProps = {\n    elevation: 1,\n  };\n\n  state = {\n    // @ts-ignore\n    elevation: new Animated.Value(this.props.elevation),\n  };\n\n  private handlePressIn = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.elevation, {\n      toValue: 8,\n      duration: 150 * scale,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  private handlePressOut = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.elevation, {\n      // @ts-ignore\n      toValue: this.props.elevation,\n      duration: 150 * scale,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  render() {\n    const {\n      children,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      elevation: cardElevation,\n      onLongPress,\n      onPress,\n      style,\n      theme,\n      testID,\n      accessible,\n      ...rest\n    } = this.props;\n    const { elevation } = this.state;\n    const { roundness } = theme;\n    const total = React.Children.count(children);\n    const siblings = React.Children.map(children, child =>\n      React.isValidElement(child) && child.type\n        ? (child.type as any).displayName\n        : null\n    );\n    return (\n      <Surface\n        style={[{ borderRadius: roundness, elevation }, style]}\n        {...rest}\n      >\n        <TouchableWithoutFeedback\n          delayPressIn={0}\n          disabled={!(onPress || onLongPress)}\n          onLongPress={onLongPress}\n          onPress={onPress}\n          onPressIn={onPress ? this.handlePressIn : undefined}\n          onPressOut={onPress ? this.handlePressOut : undefined}\n          testID={testID}\n          accessible={accessible}\n        >\n          <View style={styles.innerContainer}>\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child)\n                ? React.cloneElement(child, {\n                    index,\n                    total,\n                    siblings,\n                  })\n                : child\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]}