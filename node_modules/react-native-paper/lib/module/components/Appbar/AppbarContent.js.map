{"version":3,"sources":["AppbarContent.tsx"],"names":["AppbarContent","props","color","titleColor","white","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","theme","title","rest","fonts","subtitleColor","alpha","rgb","string","styles","container","Platform","OS","regular","medium","React","Component","StyleSheet","create","flex","paddingHorizontal","fontSize"],"mappings":"sgCAAA,oDACA,yCASA,oDAEA,gEAEA,2CACA,2C,64BA2CMA,CAAAA,a,kWAGK,iBAYH,KAAKC,KAZF,+BAELC,KAFK,CAEEC,UAFF,4BAEeC,aAFf,mBAGLC,QAHK,aAGLA,QAHK,CAILC,aAJK,aAILA,aAJK,CAKLC,OALK,aAKLA,OALK,CAMLC,KANK,aAMLA,KANK,CAOLC,QAPK,aAOLA,QAPK,CAQLC,UARK,aAQLA,UARK,CASLC,KATK,aASLA,KATK,CAULC,KAVK,aAULA,KAVK,CAWFC,IAXE,sJAaCC,CAAAA,KAbD,CAaWH,KAbX,CAaCG,KAbD,CAeP,GAAMC,CAAAA,aAAa,CAAG,mBAAMZ,UAAN,EACnBa,KADmB,CACb,GADa,EAEnBC,GAFmB,GAGnBC,MAHmB,EAAtB,CAKA,MACE,qBAAC,qCAAD,EAA0B,OAAO,CAAEX,OAAnC,CAA4C,QAAQ,CAAE,CAACA,OAAvD,iDACE,oBAAC,iBAAD,wBAAM,KAAK,CAAE,CAACY,MAAM,CAACC,SAAR,CAAmBZ,KAAnB,CAAb,EAA4CK,IAA5C,mDACE,oBAAC,aAAD,EACE,GAAG,CAAEJ,QADP,CAEE,KAAK,CAAE,gBAEHP,KAAK,CAAEC,UAFJ,EAGCkB,sBAASC,EAAT,GAAgB,KAAhB,CAAwBR,KAAK,CAACS,OAA9B,CAAwCT,KAAK,CAACU,MAH/C,EAKLL,MAAM,CAACP,KALF,CAMLF,UANK,CAFT,CAUE,aAAa,CAAE,CAVjB,CAWE,UAAU,KAXZ,CAYE,mBAAmB,CAAC,QAZtB,CAcE,iBAAiB,CAAEW,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,SAAxB,CAAoC,QAdzD,iDAgBGV,KAhBH,CADF,CAmBGP,QAAQ,CACP,oBAAC,aAAD,EACE,KAAK,CAAE,CAACc,MAAM,CAACd,QAAR,CAAkB,CAAEH,KAAK,CAAEa,aAAT,CAAlB,CAA4CT,aAA5C,CADT,CAEE,aAAa,CAAE,CAFjB,kDAIGD,QAJH,CADO,CAOL,IA1BN,CADF,CADF,CAgCD,C,2BAvDyBoB,KAAK,CAACC,S,mEAA5B1B,a,eACiB,gB,EAyDvB,GAAMmB,CAAAA,MAAM,CAAGQ,wBAAWC,MAAX,CAAkB,CAC/BR,SAAS,CAAE,CACTS,IAAI,CAAE,CADG,CAETC,iBAAiB,CAAE,EAFV,CADoB,CAK/BlB,KAAK,CAAE,CACLmB,QAAQ,CAAEV,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,EADlC,CALwB,CAQ/BjB,QAAQ,CAAE,CACR0B,QAAQ,CAAEV,sBAASC,EAAT,GAAgB,KAAhB,CAAwB,EAAxB,CAA6B,EAD/B,CARqB,CAAlB,CAAf,C,aAae,uBAAUtB,aAAV,C","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Reference for the title.\n   */\n  titleRef?: React.RefObject<Text>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleRef,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            ref={titleRef}\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessible\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"]}