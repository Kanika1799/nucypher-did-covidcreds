{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","props","statusBarHeight","APPROX_STATUSBAR_HEIGHT","style","dark","rest","theme","isDarkTheme","colors","mode","StyleSheet","flatten","height","DEFAULT_APPBAR_HEIGHT","elevation","customBackground","backgroundColor","zIndex","restStyle","surface","primary","Wrapper","View","SafeAreaView","marginTop","styles","appbar","React","Component","create"],"mappings":"qgCAAA,oDACA,yCAOA,qEACA,yDACA,mEACA,2CAEA,0C,mGAsEMA,CAAAA,Y,6VAGK,iBAOH,KAAKC,KAPF,mCAGLC,eAHK,CAGLA,eAHK,gCAGaC,kCAHb,uBAILC,KAJK,aAILA,KAJK,CAKLC,IALK,aAKLA,IALK,CAMFC,IANE,uGAQqCA,IAAI,CAACC,KAR1C,CAQOC,WARP,aAQCH,IARD,CAQoBI,MARpB,aAQoBA,MARpB,CAQ4BC,IAR5B,aAQ4BA,IAR5B,UAeQC,wBAAWC,OAAX,CAAmBR,KAAnB,GAA6B,EAfrC,kBAULS,MAVK,CAULA,MAVK,sBAUIC,6BAVJ,iCAWLC,SAXK,CAWLA,SAXK,yBAWO,CAXP,gBAYYC,gBAZZ,MAYLC,eAZK,kBAaLC,MAbK,CAaLA,MAbK,sBAaI,CAbJ,aAcFC,SAdE,+FAgBP,GAAMF,CAAAA,eAAe,CAAGD,gBAAgB,CACpCA,gBADoC,CAEpCR,WAAW,EAAIE,IAAI,GAAK,UAAxB,CACA,qBAAQK,SAAR,CAAmBN,MAAM,CAACW,OAA1B,CADA,CAEAX,MAAM,CAACY,OAJX,CAMA,GAAMC,CAAAA,OAAO,CACX,MAAO,MAAKrB,KAAL,CAAWC,eAAlB,GAAsC,QAAtC,CAAiDqB,iBAAjD,CAAwDC,yBAD1D,CAGA,MACE,qBAAC,OAAD,EACE,KAAK,CACH,CACE,CAAEP,eAAe,CAAfA,eAAF,CAAmBC,MAAM,CAANA,MAAnB,CAA2BH,SAAS,CAATA,SAA3B,CADF,CAEE,oBAAOA,SAAP,CAFF,CAFJ,kDAQE,oBAAC,eAAD,wBACE,KAAK,CAAE,CAEL,CAAEF,MAAM,CAANA,MAAF,CAAUI,eAAe,CAAfA,eAAV,CAA2BQ,SAAS,CAAEvB,eAAtC,CAFK,CAGLwB,MAAM,CAACC,MAHF,CAILR,SAJK,CADT,CAOE,IAAI,CAAEd,IAPR,EAQMC,IARN,oDARF,CADF,CAqBD,C,0BAjDwBsB,KAAK,CAACC,S,iEAA3B7B,Y,eACiB,e,EAmDvB,GAAM0B,CAAAA,MAAM,CAAGf,wBAAWmB,MAAX,CAAkB,CAC/BH,MAAM,CAAE,CACNZ,SAAS,CAAE,CADL,CADuB,CAAlB,CAAf,C,aAMe,uBAAUf,YAAV,C","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  SafeAreaView,\n  ViewStyle,\n} from 'react-native';\nimport overlay from '../../styles/overlay';\nimport Appbar, { DEFAULT_APPBAR_HEIGHT } from './Appbar';\nimport shadow from '../../styles/shadow';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n  /**\n   * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Extra padding to add at the top of header to account for translucent status bar.\n   * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n   */\n  statusBarHeight?: number;\n  /**\n   * Content of the header.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   _goBack = () => console.log('Went back');\n *\n *   _handleSearch = () => console.log('Searching');\n *\n *   _handleMore = () => console.log('Shown more');\n *\n *   render() {\n *     return (\n *       <Appbar.Header>\n *         <Appbar.BackAction\n *           onPress={this._goBack}\n *         />\n *         <Appbar.Content\n *           title=\"Title\"\n *           subtitle=\"Subtitle\"\n *         />\n *         <Appbar.Action icon=\"magnify\" onPress={this._handleSearch} />\n *         <Appbar.Action icon=\"dots-vertical\" onPress={this._handleMore} />\n *       </Appbar.Header>\n *     );\n *   }\n * }\n * ```\n */\nclass AppbarHeader extends React.Component<Props> {\n  static displayName = 'Appbar.Header';\n\n  render() {\n    const {\n      // Don't use default props since we check it to know whether we should use SafeAreaView\n      statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n      style,\n      dark,\n      ...rest\n    } = this.props;\n    const { dark: isDarkTheme, colors, mode } = rest.theme;\n    const {\n      height = DEFAULT_APPBAR_HEIGHT,\n      elevation = 4,\n      backgroundColor: customBackground,\n      zIndex = 0,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    // Let the user override the behaviour\n    const Wrapper =\n      typeof this.props.statusBarHeight === 'number' ? View : SafeAreaView;\n\n    return (\n      <Wrapper\n        style={\n          [\n            { backgroundColor, zIndex, elevation },\n            shadow(elevation),\n          ] as StyleProp<ViewStyle>\n        }\n      >\n        <Appbar\n          style={[\n            //@ts-ignore\n            { height, backgroundColor, marginTop: statusBarHeight },\n            styles.appbar,\n            restStyle,\n          ]}\n          dark={dark}\n          {...rest}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(AppbarHeader);\n\n// @component-docs ignore-next-line\nexport { AppbarHeader };\n"]}