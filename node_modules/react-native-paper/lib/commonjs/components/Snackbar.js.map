{"version":3,"sources":["Snackbar.tsx"],"names":["DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","opacity","Animated","Value","hidden","props","visible","show","hide","hideTimeout","clearTimeout","setState","scale","theme","animation","timing","state","toValue","duration","useNativeDriver","start","finished","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","onDismiss","prevProps","toggle","children","action","style","wrapperStyle","rest","colors","roundness","styles","wrapper","container","borderRadius","transform","interpolate","inputRange","outputRange","backgroundColor","onSurface","content","marginRight","color","surface","accessibilityLabel","onPress","button","accent","label","React","Component","StyleSheet","create","position","bottom","width","elevation","flexDirection","justifyContent","alignItems","margin","marginLeft","marginVertical","flexWrap","flex","marginHorizontal"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  SafeAreaView,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n  View,\n} from 'react-native';\n\nimport Button from './Button';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: {\n    label: string;\n    accessibilityLabel?: string;\n    onPress: () => void;\n  };\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n  hidden: boolean;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default use onSurface color from theme\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _onToggleSnackBar = () => this.setState(state => ({ visible: !state.visible }));\n *\n *   _onDismissSnackBar = () => this.setState({ visible: false });\n *\n *   render() {\n *     const { visible } = this.state;\n *\n *     return (\n *       <View style={styles.container}>\n *         <Button\n *           onPress={this._onToggleSnackBar}\n *         >\n *           {visible ? 'Hide' : 'Show'}\n *         </Button>\n *         <Snackbar\n *           visible={visible}\n *           onDismiss={this._onDismissSnackBar}\n *           action={{\n *             label: 'Undo',\n *             onPress: () => {\n *               // Do something\n *             },\n *           }}\n *         >\n *           Hey there! I'm a Snackbar.\n *         </Snackbar>\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n * ```\n */\nclass Snackbar extends React.Component<Props, State> {\n  /**\n   * Show the Snackbar for a short duration.\n   */\n  static DURATION_SHORT = DURATION_SHORT;\n\n  /**\n   * Show the Snackbar for a medium duration.\n   */\n  static DURATION_MEDIUM = DURATION_MEDIUM;\n\n  /**\n   * Show the Snackbar for a long duration.\n   */\n  static DURATION_LONG = DURATION_LONG;\n\n  static defaultProps = {\n    duration: DURATION_MEDIUM,\n  };\n\n  state = {\n    opacity: new Animated.Value(0.0),\n    hidden: !this.props.visible,\n  };\n\n  componentDidMount() {\n    if (this.props.visible) {\n      this.show();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this.toggle();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n  }\n\n  private toggle = () => {\n    if (this.props.visible) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  private show = () => {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n    this.setState({\n      hidden: false,\n    });\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration: 200 * scale,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        const { duration } = this.props;\n        const isInfinity =\n          duration === Number.POSITIVE_INFINITY ||\n          duration === Number.NEGATIVE_INFINITY;\n\n        if (finished && !isInfinity) {\n          this.hideTimeout = setTimeout(this.props.onDismiss, duration);\n        }\n      }\n    });\n  };\n\n  private hide = () => {\n    if (this.hideTimeout) {\n      clearTimeout(this.hideTimeout);\n    }\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.opacity, {\n      toValue: 0,\n      duration: 100 * scale,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.setState({ hidden: true });\n      }\n    });\n  };\n\n  private hideTimeout?: number;\n\n  render() {\n    const {\n      children,\n      visible,\n      action,\n      onDismiss,\n      theme,\n      style,\n      wrapperStyle,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      duration,\n      ...rest\n    } = this.props;\n    const { colors, roundness } = theme;\n\n    if (this.state.hidden) {\n      return null;\n    }\n\n    return (\n      <SafeAreaView\n        pointerEvents=\"box-none\"\n        style={[styles.wrapper, wrapperStyle]}\n      >\n        <Surface\n          pointerEvents=\"box-none\"\n          accessibilityLiveRegion=\"polite\"\n          style={\n            [\n              styles.container,\n              {\n                borderRadius: roundness,\n                opacity: this.state.opacity,\n                transform: [\n                  {\n                    scale: visible\n                      ? this.state.opacity.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [0.9, 1],\n                        })\n                      : 1,\n                  },\n                ],\n              },\n              { backgroundColor: colors.onSurface },\n              style,\n            ] as StyleProp<ViewStyle>\n          }\n          {...rest}\n        >\n          <Text\n            style={[\n              styles.content,\n              { marginRight: action ? 0 : 16, color: colors.surface },\n            ]}\n          >\n            {children}\n          </Text>\n          {action ? (\n            <Button\n              accessibilityLabel={action.accessibilityLabel}\n              onPress={() => {\n                action.onPress();\n                onDismiss();\n              }}\n              style={styles.button}\n              color={colors.accent}\n              compact\n              mode=\"text\"\n            >\n              {action.label}\n            </Button>\n          ) : null}\n        </Surface>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    elevation: 6,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 8,\n    borderRadius: 4,\n  },\n  content: {\n    marginLeft: 16,\n    marginVertical: 14,\n    flexWrap: 'wrap',\n    flex: 1,\n  },\n  button: {\n    marginHorizontal: 8,\n    marginVertical: 6,\n  },\n});\n\nexport default withTheme(Snackbar);\n"]}