{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { CodedError } from '@unimodules/core';\nimport compareUrls from 'compare-urls';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport AppState from \"react-native-web/dist/exports/AppState\";\nvar popupWindow = null;\nvar listenerMap = new Map();\n\nvar getHandle = function getHandle() {\n  return 'ExpoWebBrowserRedirectHandle';\n};\n\nvar getOriginUrlHandle = function getOriginUrlHandle(hash) {\n  return \"ExpoWebBrowser_OriginUrl_\" + hash;\n};\n\nvar getRedirectUrlHandle = function getRedirectUrlHandle(hash) {\n  return \"ExpoWebBrowser_RedirectUrl_\" + hash;\n};\n\nfunction dismissPopup() {\n  if (!popupWindow) {\n    return;\n  }\n\n  popupWindow.close();\n\n  if (listenerMap.has(popupWindow)) {\n    var _listenerMap$get = listenerMap.get(popupWindow),\n        listener = _listenerMap$get.listener,\n        appStateListener = _listenerMap$get.appStateListener,\n        interval = _listenerMap$get.interval;\n\n    clearInterval(interval);\n    window.removeEventListener('message', listener);\n    AppState.removeEventListener('change', appStateListener);\n    listenerMap.delete(popupWindow);\n    var handle = window.localStorage.getItem(getHandle());\n\n    if (handle) {\n      window.localStorage.removeItem(getHandle());\n      window.localStorage.removeItem(getOriginUrlHandle(handle));\n      window.localStorage.removeItem(getRedirectUrlHandle(handle));\n    }\n\n    popupWindow = null;\n  }\n}\n\nexport default {\n  get name() {\n    return 'ExpoWebBrowser';\n  },\n\n  openBrowserAsync: function openBrowserAsync(url) {\n    var browserParams,\n        _browserParams$window,\n        windowName,\n        windowFeatures,\n        _args = arguments;\n\n    return _regeneratorRuntime.async(function openBrowserAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            browserParams = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n\n            if (canUseDOM) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              type: 'cancel'\n            });\n\n          case 3:\n            _browserParams$window = browserParams.windowName, windowName = _browserParams$window === void 0 ? '_blank' : _browserParams$window, windowFeatures = browserParams.windowFeatures;\n            window.open(url, windowName, windowFeatures);\n            return _context.abrupt(\"return\", {\n              type: 'opened'\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  dismissAuthSession: function dismissAuthSession() {\n    if (!canUseDOM) return;\n    dismissPopup();\n  },\n  maybeCompleteAuthSession: function maybeCompleteAuthSession(_ref) {\n    var _window$opener;\n\n    var skipRedirectCheck = _ref.skipRedirectCheck;\n    if (!canUseDOM) return {\n      type: 'failed',\n      message: 'Cannot use expo-web-browser in a non-browser environment'\n    };\n    var handle = window.localStorage.getItem(getHandle());\n\n    if (!handle) {\n      return {\n        type: 'failed',\n        message: 'No auth session is currently in progress'\n      };\n    }\n\n    var url = window.location.href;\n\n    if (skipRedirectCheck !== true) {\n      var redirectUrl = window.localStorage.getItem(getRedirectUrlHandle(handle));\n      var currentUrl = window.location.origin + window.location.pathname;\n\n      if (!compareUrls(redirectUrl, currentUrl)) {\n        return {\n          type: 'failed',\n          message: \"Current URL \\\"\" + currentUrl + \"\\\" and original redirect URL \\\"\" + redirectUrl + \"\\\" do not match.\"\n        };\n      }\n    }\n\n    window.localStorage.setItem(getOriginUrlHandle(handle), url);\n    var parent = (_window$opener = window.opener) != null ? _window$opener : window.parent;\n\n    if (!parent) {\n      throw new CodedError('ERR_WEB_BROWSER_REDIRECT', \"The window cannot complete the redirect request because the invoking window doesn't have a reference to it's parent. This can happen if the parent window was reloaded.\");\n    }\n\n    parent.postMessage({\n      url: url,\n      expoSender: handle\n    }, parent.location);\n    return {\n      type: 'success',\n      message: \"Attempting to complete auth\"\n    };\n  },\n  openAuthSessionAsync: function openAuthSessionAsync(url, redirectUrl) {\n    var _redirectUrl, _popupWindow;\n\n    var state, features;\n    return _regeneratorRuntime.async(function openAuthSessionAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (canUseDOM) {\n              _context3.next = 2;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", {\n              type: 'cancel'\n            });\n\n          case 2:\n            redirectUrl = (_redirectUrl = redirectUrl) != null ? _redirectUrl : getRedirectUrlFromUrlOrGenerate(url);\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(getStateFromUrlOrGenerateAsync(url));\n\n          case 5:\n            state = _context3.sent;\n            window.localStorage.setItem(getHandle(), state);\n            window.localStorage.setItem(getRedirectUrlHandle(state), redirectUrl);\n\n            if (!(popupWindow == null || ((_popupWindow = popupWindow) == null ? void 0 : _popupWindow.closed))) {\n              _context3.next = 13;\n              break;\n            }\n\n            features = 'width=600,height=700,top=100,left=100,toolbar=no,menubar=no';\n            popupWindow = window.open(url, undefined, features);\n\n            if (popupWindow) {\n              _context3.next = 13;\n              break;\n            }\n\n            throw new CodedError('ERR_WEB_BROWSER_BLOCKED', 'Popup window was blocked by the browser or failed to open. This can happen in mobile browsers when the window.open() method was invoked too long after a user input was fired.');\n\n          case 13:\n            return _context3.abrupt(\"return\", new Promise(function _callee(resolve) {\n              var listener, appStateListener, interval;\n              return _regeneratorRuntime.async(function _callee$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      listener = function listener(event) {\n                        if (!event.isTrusted) return;\n\n                        if (event.origin !== window.location.origin) {\n                          return;\n                        }\n\n                        var data = event.data;\n                        var handle = window.localStorage.getItem(getHandle());\n\n                        if (data.expoSender === handle) {\n                          dismissPopup();\n                          resolve({\n                            type: 'success',\n                            url: data.url\n                          });\n                        }\n                      };\n\n                      window.addEventListener('message', listener, false);\n\n                      appStateListener = function appStateListener(state) {\n                        if (state !== 'active') {\n                          return;\n                        }\n\n                        var handle = window.localStorage.getItem(getHandle());\n\n                        if (handle) {\n                          var _url = window.localStorage.getItem(getOriginUrlHandle(handle));\n\n                          if (_url) {\n                            dismissPopup();\n                            resolve({\n                              type: 'success',\n                              url: _url\n                            });\n                          }\n                        }\n                      };\n\n                      AppState.addEventListener('change', appStateListener);\n                      interval = setInterval(function () {\n                        var _popupWindow2;\n\n                        if ((_popupWindow2 = popupWindow) == null ? void 0 : _popupWindow2.closed) {\n                          if (resolve) resolve({\n                            type: 'dismiss'\n                          });\n                          clearInterval(interval);\n                          dismissPopup();\n                        }\n                      }, 1000);\n                      listenerMap.set(popupWindow, {\n                        listener: listener,\n                        interval: interval,\n                        appStateListener: appStateListener\n                      });\n\n                    case 6:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            }));\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n};\n\nfunction isCryptoAvailable() {\n  var _window;\n\n  if (!canUseDOM) return false;\n  return !!((_window = window) == null ? void 0 : _window.crypto);\n}\n\nfunction isSubtleCryptoAvailable() {\n  if (!isCryptoAvailable()) return false;\n  return !!window.crypto.subtle;\n}\n\nfunction getStateFromUrlOrGenerateAsync(inputUrl) {\n  var url;\n  return _regeneratorRuntime.async(function getStateFromUrlOrGenerateAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          url = new URL(inputUrl);\n\n          if (!(url.searchParams.has('state') && typeof url.searchParams.get('state') === 'string')) {\n            _context4.next = 3;\n            break;\n          }\n\n          return _context4.abrupt(\"return\", url.searchParams.get('state'));\n\n        case 3:\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(generateStateAsync());\n\n        case 5:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getRedirectUrlFromUrlOrGenerate(inputUrl) {\n  var url = new URL(inputUrl);\n\n  if (url.searchParams.has('redirect_uri') && typeof url.searchParams.get('redirect_uri') === 'string') {\n    return url.searchParams.get('redirect_uri');\n  }\n\n  return location.origin + location.pathname;\n}\n\nvar CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nfunction generateStateAsync() {\n  var encoder, data, buffer, hashedData, state;\n  return _regeneratorRuntime.async(function generateStateAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (isSubtleCryptoAvailable()) {\n            _context5.next = 2;\n            break;\n          }\n\n          throw new CodedError('ERR_WEB_BROWSER_CRYPTO', \"The current environment doesn't support crypto. Ensure you are running from a secure origin (https).\");\n\n        case 2:\n          encoder = new TextEncoder();\n          data = generateRandom(10);\n          buffer = encoder.encode(data);\n          _context5.next = 7;\n          return _regeneratorRuntime.awrap(crypto.subtle.digest('SHA-256', buffer));\n\n        case 7:\n          hashedData = _context5.sent;\n          state = btoa(String.fromCharCode.apply(String, _toConsumableArray(new Uint8Array(hashedData))));\n          return _context5.abrupt(\"return\", state);\n\n        case 10:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction generateRandom(size) {\n  var arr = new Uint8Array(size);\n\n  if (arr.byteLength !== arr.length) {\n    arr = new Uint8Array(arr.buffer);\n  }\n\n  var array = new Uint8Array(arr.length);\n\n  if (isCryptoAvailable()) {\n    window.crypto.getRandomValues(array);\n  } else {\n    for (var i = 0; i < size; i += 1) {\n      array[i] = Math.random() * CHARSET.length | 0;\n    }\n  }\n\n  return bufferToString(array);\n}\n\nfunction bufferToString(buffer) {\n  var state = [];\n\n  for (var i = 0; i < buffer.byteLength; i += 1) {\n    var index = buffer[i] % CHARSET.length;\n    state.push(CHARSET[index]);\n  }\n\n  return state.join('');\n}","map":{"version":3,"sources":["../src/ExpoWebBrowser.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { CodedError } from '@unimodules/core';\nimport compareUrls from 'compare-urls';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { AppState, AppStateStatus } from 'react-native';\n\nimport {\n  WebBrowserAuthSessionResult,\n  WebBrowserOpenOptions,\n  WebBrowserResult,\n} from './WebBrowser.types';\n\nlet popupWindow: Window | null = null;\n\nconst listenerMap = new Map();\n\nconst getHandle = () => 'ExpoWebBrowserRedirectHandle';\nconst getOriginUrlHandle = (hash: string) => `ExpoWebBrowser_OriginUrl_${hash}`;\nconst getRedirectUrlHandle = (hash: string) => `ExpoWebBrowser_RedirectUrl_${hash}`;\n\nfunction dismissPopup() {\n  if (!popupWindow) {\n    return;\n  }\n  popupWindow.close();\n  if (listenerMap.has(popupWindow)) {\n    const { listener, appStateListener, interval } = listenerMap.get(popupWindow);\n    clearInterval(interval);\n    window.removeEventListener('message', listener);\n    AppState.removeEventListener('change', appStateListener);\n    listenerMap.delete(popupWindow);\n\n    const handle = window.localStorage.getItem(getHandle());\n    if (handle) {\n      window.localStorage.removeItem(getHandle());\n      window.localStorage.removeItem(getOriginUrlHandle(handle));\n      window.localStorage.removeItem(getRedirectUrlHandle(handle));\n    }\n\n    popupWindow = null;\n  }\n}\n\nexport default {\n  get name() {\n    return 'ExpoWebBrowser';\n  },\n  async openBrowserAsync(\n    url: string,\n    browserParams: WebBrowserOpenOptions = {}\n  ): Promise<WebBrowserResult> {\n    if (!canUseDOM) return { type: 'cancel' };\n    const { windowName = '_blank', windowFeatures } = browserParams;\n    window.open(url, windowName, windowFeatures);\n    return { type: 'opened' };\n  },\n  dismissAuthSession() {\n    if (!canUseDOM) return;\n    dismissPopup();\n  },\n  maybeCompleteAuthSession({\n    skipRedirectCheck,\n  }: {\n    skipRedirectCheck?: boolean;\n  }): { type: 'success' | 'failed'; message: string } {\n    if (!canUseDOM)\n      return {\n        type: 'failed',\n        message: 'Cannot use expo-web-browser in a non-browser environment',\n      };\n    const handle = window.localStorage.getItem(getHandle());\n\n    if (!handle) {\n      return { type: 'failed', message: 'No auth session is currently in progress' };\n    }\n\n    const url = window.location.href;\n\n    if (skipRedirectCheck !== true) {\n      const redirectUrl = window.localStorage.getItem(getRedirectUrlHandle(handle));\n      // Compare the original redirect url against the current url with it's query params removed.\n      const currentUrl = window.location.origin + window.location.pathname;\n      if (!compareUrls(redirectUrl, currentUrl)) {\n        return {\n          type: 'failed',\n          message: `Current URL \"${currentUrl}\" and original redirect URL \"${redirectUrl}\" do not match.`,\n        };\n      }\n    }\n\n    // Save the link for app state listener\n    window.localStorage.setItem(getOriginUrlHandle(handle), url);\n\n    // Get the window that created the current popup\n    const parent = window.opener ?? window.parent;\n    if (!parent) {\n      throw new CodedError(\n        'ERR_WEB_BROWSER_REDIRECT',\n        `The window cannot complete the redirect request because the invoking window doesn't have a reference to it's parent. This can happen if the parent window was reloaded.`\n      );\n    }\n    // Send the URL back to the opening window.\n    parent.postMessage({ url, expoSender: handle }, parent.location);\n    return { type: 'success', message: `Attempting to complete auth` };\n\n    // Maybe set timer to throw an error if the window is still open after attempting to complete.\n  },\n  // This method should be invoked from user input.\n  async openAuthSessionAsync(\n    url: string,\n    redirectUrl?: string\n  ): Promise<WebBrowserAuthSessionResult> {\n    if (!canUseDOM) return { type: 'cancel' };\n\n    redirectUrl = redirectUrl ?? getRedirectUrlFromUrlOrGenerate(url);\n\n    const state = await getStateFromUrlOrGenerateAsync(url);\n\n    // Save handle for session\n    window.localStorage.setItem(getHandle(), state);\n    // Save redirect Url for further verification\n    window.localStorage.setItem(getRedirectUrlHandle(state), redirectUrl);\n\n    if (popupWindow == null || popupWindow?.closed) {\n      // Create a reasonable popup\n      // https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features\n      const features = 'width=600,height=700,top=100,left=100,toolbar=no,menubar=no';\n      popupWindow = window.open(url, undefined, features);\n\n      if (!popupWindow) {\n        throw new CodedError(\n          'ERR_WEB_BROWSER_BLOCKED',\n          'Popup window was blocked by the browser or failed to open. This can happen in mobile browsers when the window.open() method was invoked too long after a user input was fired.'\n        );\n      }\n    }\n\n    return new Promise(async resolve => {\n      // Create a listener for messages sent from the popup\n      const listener = (event: MessageEvent) => {\n        if (!event.isTrusted) return;\n        // Ensure we trust the sender.\n        if (event.origin !== window.location.origin) {\n          return;\n        }\n        const { data } = event;\n        // Use a crypto hash to invalid message.\n        const handle = window.localStorage.getItem(getHandle());\n        // Ensure the sender is also from expo-web-browser\n        if (data.expoSender === handle) {\n          dismissPopup();\n          resolve({ type: 'success', url: data.url });\n        }\n      };\n\n      // Add a listener for receiving messages from the popup.\n      window.addEventListener('message', listener, false);\n\n      // Create an app state listener as a fallback to the popup listener\n      const appStateListener = (state: AppStateStatus) => {\n        if (state !== 'active') {\n          return;\n        }\n        const handle = window.localStorage.getItem(getHandle());\n        if (handle) {\n          const url = window.localStorage.getItem(getOriginUrlHandle(handle));\n          if (url) {\n            dismissPopup();\n            resolve({ type: 'success', url });\n          }\n        }\n      };\n\n      AppState.addEventListener('change', appStateListener);\n\n      // Check if the window has been closed every second.\n      const interval = setInterval(() => {\n        if (popupWindow?.closed) {\n          if (resolve) resolve({ type: 'dismiss' });\n          clearInterval(interval);\n          dismissPopup();\n        }\n      }, 1000);\n\n      // Store the listener and interval for clean up.\n      listenerMap.set(popupWindow, {\n        listener,\n        interval,\n        appStateListener,\n      });\n    });\n  },\n};\n\n// Crypto\nfunction isCryptoAvailable(): boolean {\n  if (!canUseDOM) return false;\n  return !!(window?.crypto as any);\n}\n\nfunction isSubtleCryptoAvailable(): boolean {\n  if (!isCryptoAvailable()) return false;\n  return !!(window.crypto.subtle as any);\n}\n\nasync function getStateFromUrlOrGenerateAsync(inputUrl: string): Promise<string> {\n  const url = new URL(inputUrl);\n  if (url.searchParams.has('state') && typeof url.searchParams.get('state') === 'string') {\n    // Ensure we reuse the auth state if it's passed in.\n    return url.searchParams.get('state')!;\n  }\n  // Generate a crypto state for verifying the return popup.\n  return await generateStateAsync();\n}\nfunction getRedirectUrlFromUrlOrGenerate(inputUrl: string): string {\n  const url = new URL(inputUrl);\n  if (\n    url.searchParams.has('redirect_uri') &&\n    typeof url.searchParams.get('redirect_uri') === 'string'\n  ) {\n    // Ensure we reuse the redirect_uri if it's passed in the input url.\n    return url.searchParams.get('redirect_uri')!;\n  }\n  // Emulate how native uses Constants.linkingUrl\n  return location.origin + location.pathname;\n}\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nasync function generateStateAsync(): Promise<string> {\n  if (!isSubtleCryptoAvailable()) {\n    throw new CodedError(\n      'ERR_WEB_BROWSER_CRYPTO',\n      `The current environment doesn't support crypto. Ensure you are running from a secure origin (https).`\n    );\n  }\n  const encoder = new TextEncoder();\n\n  const data = generateRandom(10);\n  const buffer = encoder.encode(data);\n  const hashedData = await crypto.subtle.digest('SHA-256', buffer);\n  const state = btoa(String.fromCharCode(...new Uint8Array(hashedData)));\n  return state;\n}\n\nfunction generateRandom(size: number): string {\n  let arr = new Uint8Array(size);\n  if (arr.byteLength !== arr.length) {\n    arr = new Uint8Array(arr.buffer);\n  }\n  const array = new Uint8Array(arr.length);\n  if (isCryptoAvailable()) {\n    window.crypto.getRandomValues(array);\n  } else {\n    for (let i = 0; i < size; i += 1) {\n      array[i] = (Math.random() * CHARSET.length) | 0;\n    }\n  }\n  return bufferToString(array);\n}\n\nfunction bufferToString(buffer): string {\n  const state: string[] = [];\n  for (let i = 0; i < buffer.byteLength; i += 1) {\n    const index = buffer[i] % CHARSET.length;\n    state.push(CHARSET[index]);\n  }\n  return state.join('');\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}