{"ast":null,"code":"import { Appearance } from \"react-native-web/dist/index\";\n\nfunction getColorScheme() {\n  if (Appearance) {\n    return Appearance.getColorScheme();\n  } else {\n    return 'light';\n  }\n}\n\nexport default function styleToBarStyle() {\n  var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'auto';\n  var colorScheme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getColorScheme();\n\n  if (!colorScheme) {\n    colorScheme = 'light';\n  }\n\n  var resolvedStyle = style;\n\n  if (style === 'auto') {\n    resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n  } else if (style === 'inverted') {\n    resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n  }\n\n  return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n}","map":{"version":3,"sources":["../src/styleToBarStyle.ts"],"names":[],"mappings":"SAAS,U;;AAIT,SAAS,cAAT,GAAuB;AACrB,MAAI,UAAJ,EAAgB;AACd,WAAO,UAAU,CAAC,cAAX,EAAP;AACD,GAFD,MAEO;AACL,WAAO,OAAP;AACD;AACF;;AAED,eAAc,SAAU,eAAV,GAEmC;AAAA,MAD/C,KAC+C,uEADvB,MACuB;AAAA,MAA/C,WAA+C,uEAAhB,cAAc,EAAE;;AAE/C,MAAI,CAAC,WAAL,EAAkB;AAChB,IAAA,WAAW,GAAG,OAAd;AACD;;AAED,MAAI,aAAa,GAAG,KAApB;;AACA,MAAI,KAAK,KAAK,MAAd,EAAsB;AACpB,IAAA,aAAa,GAAG,WAAW,KAAK,OAAhB,GAA0B,MAA1B,GAAmC,OAAnD;AACD,GAFD,MAEO,IAAI,KAAK,KAAK,UAAd,EAA0B;AAC/B,IAAA,aAAa,GAAG,WAAW,KAAK,OAAhB,GAA0B,OAA1B,GAAoC,MAApD;AACD;;AAED,SAAO,aAAa,KAAK,OAAlB,GAA4B,eAA5B,GAA8C,cAArD;AACD","sourcesContent":["import { Appearance, ColorSchemeName } from 'react-native';\n\nimport { StatusBarStyle } from './StatusBar.types';\n\nfunction getColorScheme() {\n  if (Appearance) {\n    return Appearance.getColorScheme();\n  } else {\n    return 'light';\n  }\n}\n\nexport default function styleToBarStyle(\n  style: StatusBarStyle = 'auto',\n  colorScheme: ColorSchemeName = getColorScheme()\n): 'light-content' | 'dark-content' {\n  if (!colorScheme) {\n    colorScheme = 'light';\n  }\n\n  let resolvedStyle = style;\n  if (style === 'auto') {\n    resolvedStyle = colorScheme === 'light' ? 'dark' : 'light';\n  } else if (style === 'inverted') {\n    resolvedStyle = colorScheme === 'light' ? 'light' : 'dark';\n  }\n\n  return resolvedStyle === 'light' ? 'light-content' : 'dark-content';\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}